import{_ as t,M as o,p as c,q as p,R as n,t as s,N as e,a1 as i}from"./framework-204010b2.js";const l={},d=n("h1",{id:"vuepress-plugin-vue-docgen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-plugin-vue-docgen","aria-hidden":"true"},"#"),s(" vuepress-plugin-vue-docgen")],-1),r=n("h2",{id:"введение",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#введение","aria-hidden":"true"},"#"),s(" Введение")],-1),u=n("code",null,"vuepress-plugin-vue-docgen",-1),k=n("code",null,"vue",-1),v={href:"https://vue-styleguidist.github.io/docs/Documenting.html",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"vuepress 2",-1),g=n("code",null,"vue-docgen-cli",-1),h=n("code",null,"vue-docgen",-1),b=n("code",null,"frontmatter",-1),f=i(`<h2 id="установка" tabindex="-1"><a class="header-anchor" href="#установка" aria-hidden="true">#</a> Установка</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> <span class="token parameter variable">--save</span> vuepress-plugin-vue-docgen
<span class="token comment"># pnpm add vuepress-plugin-vue-docgen</span>
<span class="token comment"># yarn add vuepress-plugin-vue-docgen</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="типичное-использование" tabindex="-1"><a class="header-anchor" href="#типичное-использование" aria-hidden="true">#</a> Типичное использование</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> VueDocgenPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress-plugin-vue-docgen&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">VueDocgenPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Без параметров, плагин будет искать <code>.vue</code> файлы по <code>glob</code> шаблону <code>[&#39;**/components/**/*.vue&#39;, &#39;!**/node_modules/**&#39;, &#39;!**/.vuepress/**&#39;]</code></p><h2 id="конфигурация" tabindex="-1"><a class="header-anchor" href="#конфигурация" aria-hidden="true">#</a> Конфигурация</h2><h3 id="docgencliconfig" tabindex="-1"><a class="header-anchor" href="#docgencliconfig" aria-hidden="true">#</a> docgenCliConfig</h3><ul><li>type: <code>Partial&lt;Omit&lt;DocgenCLIConfig, &#39;outDir&#39; | &#39;components&#39;&gt;&gt;</code></li><li>required: <code>false</code></li></ul><p>Конфиг для <code>vue-docgen-cli</code>.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Если вам нужно изменить <code>docgenCliConfig.templates.component</code> и сохранить функциональность <code>frontmatter</code>, вам необходимо использовать <a href="#%D0%BF%D1%80%D0%BE%D0%B4%D0%B2%D0%B8%D0%BD%D1%83%D1%82%D0%BE%D0%B5-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5"><code>extractAndCutFrontmatter</code></a>.</p></div><h3 id="docgencliconfigpath" tabindex="-1"><a class="header-anchor" href="#docgencliconfigpath" aria-hidden="true">#</a> docgenCliConfigPath</h3><ul><li>type: <code>string</code></li><li>required: <code>false</code></li></ul><p>Путь к <code>docgenCliConfig</code>. Работает лишь в <code>commonjs</code> синтаксисе модуля.</p><h3 id="groups" tabindex="-1"><a class="header-anchor" href="#groups" aria-hidden="true">#</a> groups</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">VueDocgenPluginGroup</span> <span class="token punctuation">{</span>
  <span class="token comment">// Корень набора компонентов (эта часть пути будет вырезана из итогового url)</span>
  root<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// Glob строка для поиска компонентов</span>
  components<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// Итоговая папка документации конкретной группы в vuepress</span>
  outDir<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// docgenCliConfig для конкретной группы компонентов</span>
  docgenCliConfig<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Omit<span class="token operator">&lt;</span>DocgenCLIConfig<span class="token punctuation">,</span> <span class="token string">&#39;outDir&#39;</span> <span class="token operator">|</span> UsedInVueDocgenConfigProcessingProperties<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>type: <code>string | string[] | VueDocgenPluginGroup[]</code></li><li>required: <code>false</code></li><li>default: <code>[{ components: [&#39;**/components/**/*.vue&#39;, &#39;!**/node_modules/**&#39;, &#39;!**/.vuepress/**&#39;] }]</code></li></ul><p>Список наборов компонентов с возможностью кастомизации <code>root</code> и <code>outDir</code>. <code>string</code> типы конвертируются в объект вида <code>groups: &#39;*.vue&#39;</code> -&gt; <code>groups: [{ components: &#39;*.vue&#39; }]</code>.</p><h3 id="stateless" tabindex="-1"><a class="header-anchor" href="#stateless" aria-hidden="true">#</a> stateless</h3><ul><li>type: <code>boolean</code></li><li>default: <code>true</code></li></ul><p>Режим генерации файлов во временную папку.</p><h2 id="продвинутое-использование" tabindex="-1"><a class="header-anchor" href="#продвинутое-использование" aria-hidden="true">#</a> Продвинутое использование</h2><p>В случае если вам необходимо изменить <code>docgenCliConfig.templates.component</code> и при этом сохранить функциональность <code>frontmatter</code>, необходимо использовать <code>extractAndCutFrontmatter</code>. Без этого <code>frontmatter</code> вложенных файлов документации будет восприниматься как обычный <code>markdown</code> тег.</p><h3 id="extractandcutfrontmatter" tabindex="-1"><a class="header-anchor" href="#extractandcutfrontmatter" aria-hidden="true">#</a> extractAndCutFrontmatter</h3><p>Функция созданная для изъятия <code>frontmatter</code> информации из всех вложенных <code>.md</code> файлов и дальнейшем совмещении в итоговом <code>.md</code>(по умолчанию все совмещается в результат оригинального <code>docgenCliConfig.tepmlates.component</code>)</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> extractAndCutFrontmatter <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token comment">// doc.docsBlocks мутируется при вызове данной функции</span>
  doc<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Pick<span class="token operator">&lt;</span>ComponentDoc<span class="token punctuation">,</span> <span class="token string">&#39;docsBlocks&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
  grayMatterOptions<span class="token operator">:</span> GrayMatterOption<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token comment">// Исходный markdown документ (к примеру результат оригинального templates.component)</span>
  content <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// Исходный документ с внедренным frontmatter</span>
  content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// Отдельно весь frontmatter в виде объекта</span>
  frontmatter<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="пример" tabindex="-1"><a class="header-anchor" href="#пример" aria-hidden="true">#</a> Пример</h3><p>Удаление информации о слотах.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// templates/component.ts</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Templates <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-docgen-cli&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> extractAndCutFrontmatter<span class="token punctuation">,</span> templateComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress-plugin-vue-docgen&#39;</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> grayMatterOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> componentTemplate<span class="token operator">:</span> Templates<span class="token punctuation">[</span><span class="token string">&#39;component&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  renderedUsage<span class="token punctuation">,</span>
  doc<span class="token punctuation">,</span>
  config<span class="token punctuation">,</span>
  fileName<span class="token punctuation">,</span>
  requiresMd<span class="token punctuation">,</span>
  subTemplateOptions<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  renderedUsage<span class="token punctuation">.</span>slots <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token function">templateComponent</span><span class="token punctuation">(</span>grayMatterOptions<span class="token punctuation">)</span><span class="token punctuation">(</span>
    renderedUsage<span class="token punctuation">,</span>
    doc<span class="token punctuation">,</span>
    config<span class="token punctuation">,</span>
    fileName<span class="token punctuation">,</span>
    requiresMd<span class="token punctuation">,</span>
    subTemplateOptions<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="известные-ошибки" tabindex="-1"><a class="header-anchor" href="#известные-ошибки" aria-hidden="true">#</a> Известные ошибки</h2><h3 id="vuepress-editlink" tabindex="-1"><a class="header-anchor" href="#vuepress-editlink" aria-hidden="true">#</a> Vuepress editLink</h3><p>&quot;Edit this page&quot; в <code>stateless: true</code> моде не будет работать корректно и будет вести на несуществующий файл. Из-за этого, <code>editLink</code> отключены в <code>stateless: true</code> моде по умолчанию.</p><p>Возможные решение:</p>`,32),_=n("li",null,[n("code",null,"stateless: false"),s(" и хранить все сгенерированные файлы в репозитории.")],-1),y={href:"https://github.com/vue-styleguidist/vue-styleguidist/tree/dev/packages/vue-docgen-cli#getrepoediturl",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"docgenCliConfig.getRepoEditUrl",-1),x=n("code",null,"docsRepo",-1),C=n("code",null,"docsBranch",-1);function B(w,P){const a=o("ExternalLinkIcon");return c(),p("div",null,[d,r,n("p",null,[s("Плагин "),u,s(" предназначен для авто-генерации документации "),k,s(" компонентов по "),n("a",v,[s("заданному синтаксису"),e(a)]),s(". Плагин связывает "),m,s(" и "),g,s(". В каждом из файлов документации "),h,s(" продолжает работать "),b,s(".")]),f,n("ul",null,[_,n("li",null,[s("Использовать "),n("a",y,[D,e(a)]),s(" и его под-свойства типа "),x,s(", "),C,s(".")])])])}const E=t(l,[["render",B],["__file","index.html.vue"]]);export{E as default};
